# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T11:33:48+00:00

from __future__ import annotations

from enum import Enum
from typing import Any, Dict, List, Optional

from pydantic import BaseModel, Field, RootModel, SecretStr, conint, constr


class AccessDeniedException(RootModel[Any]):
    root: Any


class AsyncJobStatus(Enum):
    IN_PROGRESS_INITIALIZING = 'IN_PROGRESS_INITIALIZING'
    IN_PROGRESS = 'IN_PROGRESS'
    CANCEL_IN_PROGRESS = 'CANCEL_IN_PROGRESS'
    CANCELED = 'CANCELED'
    COMPLETE = 'COMPLETE'
    FAILED = 'FAILED'


class Boolean(RootModel[bool]):
    root: bool


class CancelBatchImportJobResult(BaseModel):
    pass


class CancelBatchPredictionJobResult(BaseModel):
    pass


class ConflictException(RootModel[Any]):
    root: Any


class CreateBatchImportJobResult(BaseModel):
    pass


class CreateBatchPredictionJobResult(BaseModel):
    pass


class CreateListResult(BaseModel):
    pass


class CreateModelResult(BaseModel):
    pass


class CreateVariableResult(BaseModel):
    pass


class DataSource(Enum):
    EVENT = 'EVENT'
    MODEL_SCORE = 'MODEL_SCORE'
    EXTERNAL_MODEL_SCORE = 'EXTERNAL_MODEL_SCORE'


class DataType(Enum):
    STRING = 'STRING'
    INTEGER = 'INTEGER'
    FLOAT = 'FLOAT'
    BOOLEAN = 'BOOLEAN'


class DeleteAuditHistory(RootModel[bool]):
    root: bool


class DeleteBatchImportJobResult(BaseModel):
    pass


class DeleteBatchPredictionJobResult(BaseModel):
    pass


class DeleteDetectorResult(BaseModel):
    pass


class DeleteDetectorVersionResult(BaseModel):
    pass


class DeleteEntityTypeResult(BaseModel):
    pass


class DeleteEventResult(BaseModel):
    pass


class DeleteEventTypeResult(BaseModel):
    pass


class DeleteExternalModelResult(BaseModel):
    pass


class DeleteLabelResult(BaseModel):
    pass


class DeleteListResult(BaseModel):
    pass


class DeleteModelResult(BaseModel):
    pass


class DeleteModelVersionResult(BaseModel):
    pass


class DeleteOutcomeResult(BaseModel):
    pass


class DeleteRuleResult(BaseModel):
    pass


class DeleteVariableResult(BaseModel):
    pass


class DetectorVersionMaxResults(RootModel[conint(ge=1000, le=2500)]):
    root: conint(ge=1000, le=2500)


class DetectorVersionStatus(Enum):
    DRAFT = 'DRAFT'
    ACTIVE = 'ACTIVE'
    INACTIVE = 'INACTIVE'


class DetectorsMaxResults(RootModel[conint(ge=5, le=10)]):
    root: conint(ge=5, le=10)


class Elements(RootModel[SecretStr]):
    root: SecretStr


class ElementsList(RootModel[List[Elements]]):
    root: List[Elements] = Field(..., max_length=100000, min_length=0)


class EventIngestion(Enum):
    ENABLED = 'ENABLED'
    DISABLED = 'DISABLED'


class EventPredictionsMaxResults(RootModel[conint(ge=50, le=100)]):
    root: conint(ge=50, le=100)


class ExternalModelsMaxResults(RootModel[conint(ge=5, le=10)]):
    root: conint(ge=5, le=10)


class Integer(RootModel[int]):
    root: int


class InternalServerException(RootModel[Any]):
    root: Any


class KmsEncryptionKeyArn(
    RootModel[
        constr(
            pattern=r'^DEFAULT|arn:[a-zA-Z0-9-]+:kms:[a-zA-Z0-9-]+:\d{12}:key\/\w{8}-\w{4}-\w{4}-\w{4}-\w{12}$',
            min_length=7,
            max_length=90,
        )
    ]
):
    root: constr(
        pattern=r'^DEFAULT|arn:[a-zA-Z0-9-]+:kms:[a-zA-Z0-9-]+:\d{12}:key\/\w{8}-\w{4}-\w{4}-\w{4}-\w{12}$',
        min_length=7,
        max_length=90,
    )


class Language(Enum):
    DETECTORPL = 'DETECTORPL'


class ListUpdateMode(Enum):
    REPLACE = 'REPLACE'
    APPEND = 'APPEND'
    REMOVE = 'REMOVE'


class ListsElementsMaxResults(RootModel[conint(ge=500, le=5000)]):
    root: conint(ge=500, le=5000)


class ListsMetadataMaxResults(RootModel[conint(ge=5, le=50)]):
    root: conint(ge=5, le=50)


class Long(RootModel[int]):
    root: int


class ModelEndpointStatus(Enum):
    ASSOCIATED = 'ASSOCIATED'
    DISSOCIATED = 'DISSOCIATED'


class ModelInputDataFormat(Enum):
    TEXT_CSV = 'TEXT_CSV'
    APPLICATION_JSON = 'APPLICATION_JSON'


class ModelOutputDataFormat(Enum):
    TEXT_CSV = 'TEXT_CSV'
    APPLICATION_JSONLINES = 'APPLICATION_JSONLINES'


class ModelSource(Enum):
    SAGEMAKER = 'SAGEMAKER'


class ModelTypeEnum(Enum):
    ONLINE_FRAUD_INSIGHTS = 'ONLINE_FRAUD_INSIGHTS'
    TRANSACTION_FRAUD_INSIGHTS = 'TRANSACTION_FRAUD_INSIGHTS'
    ACCOUNT_TAKEOVER_INSIGHTS = 'ACCOUNT_TAKEOVER_INSIGHTS'


class ModelVersionStatus(Enum):
    ACTIVE = 'ACTIVE'
    INACTIVE = 'INACTIVE'
    TRAINING_CANCELLED = 'TRAINING_CANCELLED'


class OutcomesMaxResults(RootModel[conint(ge=50, le=100)]):
    root: conint(ge=50, le=100)


class PutDetectorResult(BaseModel):
    pass


class PutEntityTypeResult(BaseModel):
    pass


class PutEventTypeResult(BaseModel):
    pass


class PutExternalModelResult(BaseModel):
    pass


class PutKMSEncryptionKeyRequest(BaseModel):
    kmsEncryptionKeyArn: KmsEncryptionKeyArn


class PutKMSEncryptionKeyResult(BaseModel):
    pass


class PutLabelResult(BaseModel):
    pass


class PutOutcomeResult(BaseModel):
    pass


class ResourceNotFoundException(RootModel[Any]):
    root: Any


class ResourceUnavailableException(RootModel[Any]):
    root: Any


class RuleExecutionMode(Enum):
    ALL_MATCHED = 'ALL_MATCHED'
    FIRST_MATCHED = 'FIRST_MATCHED'


class RulesMaxResults(RootModel[conint(ge=50, le=100)]):
    root: conint(ge=50, le=100)


class SendEventResult(BaseModel):
    pass


class TagResourceResult(BaseModel):
    pass


class TagsMaxResults(RootModel[conint(ge=50, le=50)]):
    root: conint(ge=50, le=50)


class ThrottlingException(RootModel[Any]):
    root: Any


class TrainingDataSourceEnum(Enum):
    EXTERNAL_EVENTS = 'EXTERNAL_EVENTS'
    INGESTED_EVENTS = 'INGESTED_EVENTS'


class UnlabeledEventsTreatment(Enum):
    IGNORE = 'IGNORE'
    FRAUD = 'FRAUD'
    LEGIT = 'LEGIT'
    AUTO = 'AUTO'


class UntagResourceResult(BaseModel):
    pass


class UpdateDetectorVersionMetadataResult(BaseModel):
    pass


class UpdateDetectorVersionResult(BaseModel):
    pass


class UpdateDetectorVersionStatusResult(BaseModel):
    pass


class UpdateEventLabelResult(BaseModel):
    pass


class UpdateListResult(BaseModel):
    pass


class UpdateModelResult(BaseModel):
    pass


class UpdateModelVersionStatusResult(BaseModel):
    pass


class UpdateRuleMetadataResult(BaseModel):
    pass


class UpdateVariableResult(BaseModel):
    pass


class UseEventVariables(RootModel[bool]):
    root: bool


class ValidationException(RootModel[Any]):
    root: Any


class VariablesMaxResults(RootModel[conint(ge=50, le=100)]):
    root: conint(ge=50, le=100)


class AttributeKey(RootModel[constr(min_length=1, max_length=64)]):
    root: constr(min_length=1, max_length=64)


class AttributeValue(RootModel[SecretStr]):
    root: SecretStr


class BatchImportsMaxPageSize(RootModel[conint(ge=1, le=50)]):
    root: conint(ge=1, le=50)


class BatchPredictionsMaxPageSize(RootModel[conint(ge=1, le=50)]):
    root: conint(ge=1, le=50)


class Blob(RootModel[str]):
    root: str


class ContentType(RootModel[constr(min_length=1, max_length=1024)]):
    root: constr(min_length=1, max_length=1024)


class Description(RootModel[constr(min_length=1, max_length=128)]):
    root: constr(min_length=1, max_length=128)


class EntityRestrictedString(
    RootModel[constr(pattern=r'^[0-9A-Za-z_.@+-]+$', min_length=1, max_length=256)]
):
    root: constr(pattern=r'^[0-9A-Za-z_.@+-]+$', min_length=1, max_length=256)


class EntityTypesMaxResults(RootModel[conint(ge=5, le=10)]):
    root: conint(ge=5, le=10)


class EventTypesMaxResults(RootModel[conint(ge=5, le=10)]):
    root: conint(ge=5, le=10)


class FilterString(
    RootModel[constr(pattern=r'^[0-9A-Za-z_-]+$', min_length=1, max_length=256)]
):
    root: constr(pattern=r'^[0-9A-Za-z_-]+$', min_length=1, max_length=256)


class Float(RootModel[float]):
    root: float


class FloatVersionString(
    RootModel[
        constr(pattern=r'^[1-9][0-9]{0,3}\.[0-9]{1,2}$', min_length=3, max_length=7)
    ]
):
    root: constr(pattern=r'^[1-9][0-9]{0,3}\.[0-9]{1,2}$', min_length=3, max_length=7)


class FraudDetectorArn(
    RootModel[
        constr(
            pattern=r'^arn\:aws[a-z-]{0,15}\:frauddetector\:[a-z0-9-]{3,20}\:[0-9]{12}\:[^\s]{2,128}$',
            min_length=1,
            max_length=256,
        )
    ]
):
    root: constr(
        pattern=r'^arn\:aws[a-z-]{0,15}\:frauddetector\:[a-z0-9-]{3,20}\:[0-9]{12}\:[^\s]{2,128}$',
        min_length=1,
        max_length=256,
    )


class IamRoleArn(
    RootModel[
        constr(
            pattern=r'^arn\:aws[a-z-]{0,15}\:iam\:\:[0-9]{12}\:role\/[^\s]{2,64}$',
            min_length=1,
            max_length=256,
        )
    ]
):
    root: constr(
        pattern=r'^arn\:aws[a-z-]{0,15}\:iam\:\:[0-9]{12}\:role\/[^\s]{2,64}$',
        min_length=1,
        max_length=256,
    )


class Identifier(
    RootModel[constr(pattern=r'^[0-9a-z_-]+$', min_length=1, max_length=64)]
):
    root: constr(pattern=r'^[0-9a-z_-]+$', min_length=1, max_length=64)


class LabelsMaxResults(RootModel[conint(ge=10, le=50)]):
    root: conint(ge=10, le=50)


class ModelIdentifier(
    RootModel[constr(pattern=r'^[0-9a-z_]+$', min_length=1, max_length=64)]
):
    root: constr(pattern=r'^[0-9a-z_]+$', min_length=1, max_length=64)


class ModelInputTemplate(RootModel[constr(min_length=1, max_length=2000)]):
    root: constr(min_length=1, max_length=2000)


class ModelsMaxPageSize(RootModel[conint(ge=1, le=10)]):
    root: conint(ge=1, le=10)


class NextToken(RootModel[constr(pattern=r'.*', min_length=0, max_length=8192)]):
    root: constr(pattern=r'.*', min_length=0, max_length=8192)


class NoDashIdentifier(
    RootModel[constr(pattern=r'^[0-9a-z_]+$', min_length=1, max_length=64)]
):
    root: constr(pattern=r'^[0-9a-z_]+$', min_length=1, max_length=64)


class RuleExpression(RootModel[SecretStr]):
    root: SecretStr


class S3BucketLocation(
    RootModel[constr(pattern=r'^s3:\/\/(.+)$', min_length=1, max_length=512)]
):
    root: constr(pattern=r'^s3:\/\/(.+)$', min_length=1, max_length=512)


class SageMakerEndpointIdentifier(
    RootModel[constr(pattern=r'^[0-9A-Za-z_-]+$', min_length=1, max_length=63)]
):
    root: constr(pattern=r'^[0-9A-Za-z_-]+$', min_length=1, max_length=63)


class SensitiveString(RootModel[SecretStr]):
    root: SecretStr


class String(RootModel[str]):
    root: str


class TagKey(
    RootModel[
        constr(pattern=r'^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$', min_length=1, max_length=128)
    ]
):
    root: constr(
        pattern=r'^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$', min_length=1, max_length=128
    )


class TagKeyList(RootModel[List[TagKey]]):
    root: List[TagKey] = Field(..., max_length=50, min_length=0)


class TagValue(RootModel[constr(min_length=0, max_length=256)]):
    root: constr(min_length=0, max_length=256)


class Time(RootModel[constr(min_length=11, max_length=30)]):
    root: constr(min_length=11, max_length=30)


class UtcTimestampISO8601(RootModel[constr(min_length=10, max_length=30)]):
    root: constr(min_length=10, max_length=30)


class VariableName(RootModel[constr(min_length=1, max_length=64)]):
    root: constr(min_length=1, max_length=64)


class VariableType(
    RootModel[constr(pattern=r'^[A-Z_]{1,64}$', min_length=1, max_length=64)]
):
    root: constr(pattern=r'^[A-Z_]{1,64}$', min_length=1, max_length=64)


class VariableValue(RootModel[SecretStr]):
    root: SecretStr


class WholeNumberVersionString(
    RootModel[constr(pattern=r'^([1-9][0-9]*)$', min_length=1, max_length=5)]
):
    root: constr(pattern=r'^([1-9][0-9]*)$', min_length=1, max_length=5)


class XAmzTarget(Enum):
    AWSHawksNestServiceFacade_BatchCreateVariable = (
        'AWSHawksNestServiceFacade.BatchCreateVariable'
    )


class XAmzTarget1(Enum):
    AWSHawksNestServiceFacade_BatchGetVariable = (
        'AWSHawksNestServiceFacade.BatchGetVariable'
    )


class XAmzTarget2(Enum):
    AWSHawksNestServiceFacade_CancelBatchImportJob = (
        'AWSHawksNestServiceFacade.CancelBatchImportJob'
    )


class XAmzTarget3(Enum):
    AWSHawksNestServiceFacade_CancelBatchPredictionJob = (
        'AWSHawksNestServiceFacade.CancelBatchPredictionJob'
    )


class XAmzTarget4(Enum):
    AWSHawksNestServiceFacade_CreateBatchImportJob = (
        'AWSHawksNestServiceFacade.CreateBatchImportJob'
    )


class XAmzTarget5(Enum):
    AWSHawksNestServiceFacade_CreateBatchPredictionJob = (
        'AWSHawksNestServiceFacade.CreateBatchPredictionJob'
    )


class XAmzTarget6(Enum):
    AWSHawksNestServiceFacade_CreateDetectorVersion = (
        'AWSHawksNestServiceFacade.CreateDetectorVersion'
    )


class XAmzTarget7(Enum):
    AWSHawksNestServiceFacade_CreateList = 'AWSHawksNestServiceFacade.CreateList'


class XAmzTarget8(Enum):
    AWSHawksNestServiceFacade_CreateModel = 'AWSHawksNestServiceFacade.CreateModel'


class XAmzTarget9(Enum):
    AWSHawksNestServiceFacade_CreateModelVersion = (
        'AWSHawksNestServiceFacade.CreateModelVersion'
    )


class XAmzTarget10(Enum):
    AWSHawksNestServiceFacade_CreateRule = 'AWSHawksNestServiceFacade.CreateRule'


class XAmzTarget11(Enum):
    AWSHawksNestServiceFacade_CreateVariable = (
        'AWSHawksNestServiceFacade.CreateVariable'
    )


class XAmzTarget12(Enum):
    AWSHawksNestServiceFacade_DeleteBatchImportJob = (
        'AWSHawksNestServiceFacade.DeleteBatchImportJob'
    )


class XAmzTarget13(Enum):
    AWSHawksNestServiceFacade_DeleteBatchPredictionJob = (
        'AWSHawksNestServiceFacade.DeleteBatchPredictionJob'
    )


class XAmzTarget14(Enum):
    AWSHawksNestServiceFacade_DeleteDetector = (
        'AWSHawksNestServiceFacade.DeleteDetector'
    )


class XAmzTarget15(Enum):
    AWSHawksNestServiceFacade_DeleteDetectorVersion = (
        'AWSHawksNestServiceFacade.DeleteDetectorVersion'
    )


class XAmzTarget16(Enum):
    AWSHawksNestServiceFacade_DeleteEntityType = (
        'AWSHawksNestServiceFacade.DeleteEntityType'
    )


class XAmzTarget17(Enum):
    AWSHawksNestServiceFacade_DeleteEvent = 'AWSHawksNestServiceFacade.DeleteEvent'


class XAmzTarget18(Enum):
    AWSHawksNestServiceFacade_DeleteEventType = (
        'AWSHawksNestServiceFacade.DeleteEventType'
    )


class XAmzTarget19(Enum):
    AWSHawksNestServiceFacade_DeleteEventsByEventType = (
        'AWSHawksNestServiceFacade.DeleteEventsByEventType'
    )


class XAmzTarget20(Enum):
    AWSHawksNestServiceFacade_DeleteExternalModel = (
        'AWSHawksNestServiceFacade.DeleteExternalModel'
    )


class XAmzTarget21(Enum):
    AWSHawksNestServiceFacade_DeleteLabel = 'AWSHawksNestServiceFacade.DeleteLabel'


class XAmzTarget22(Enum):
    AWSHawksNestServiceFacade_DeleteList = 'AWSHawksNestServiceFacade.DeleteList'


class XAmzTarget23(Enum):
    AWSHawksNestServiceFacade_DeleteModel = 'AWSHawksNestServiceFacade.DeleteModel'


class XAmzTarget24(Enum):
    AWSHawksNestServiceFacade_DeleteModelVersion = (
        'AWSHawksNestServiceFacade.DeleteModelVersion'
    )


class XAmzTarget25(Enum):
    AWSHawksNestServiceFacade_DeleteOutcome = 'AWSHawksNestServiceFacade.DeleteOutcome'


class XAmzTarget26(Enum):
    AWSHawksNestServiceFacade_DeleteRule = 'AWSHawksNestServiceFacade.DeleteRule'


class XAmzTarget27(Enum):
    AWSHawksNestServiceFacade_DeleteVariable = (
        'AWSHawksNestServiceFacade.DeleteVariable'
    )


class XAmzTarget28(Enum):
    AWSHawksNestServiceFacade_DescribeDetector = (
        'AWSHawksNestServiceFacade.DescribeDetector'
    )


class XAmzTarget29(Enum):
    AWSHawksNestServiceFacade_DescribeModelVersions = (
        'AWSHawksNestServiceFacade.DescribeModelVersions'
    )


class XAmzTarget30(Enum):
    AWSHawksNestServiceFacade_GetBatchImportJobs = (
        'AWSHawksNestServiceFacade.GetBatchImportJobs'
    )


class XAmzTarget31(Enum):
    AWSHawksNestServiceFacade_GetBatchPredictionJobs = (
        'AWSHawksNestServiceFacade.GetBatchPredictionJobs'
    )


class XAmzTarget32(Enum):
    AWSHawksNestServiceFacade_GetDeleteEventsByEventTypeStatus = (
        'AWSHawksNestServiceFacade.GetDeleteEventsByEventTypeStatus'
    )


class XAmzTarget33(Enum):
    AWSHawksNestServiceFacade_GetDetectorVersion = (
        'AWSHawksNestServiceFacade.GetDetectorVersion'
    )


class XAmzTarget34(Enum):
    AWSHawksNestServiceFacade_GetDetectors = 'AWSHawksNestServiceFacade.GetDetectors'


class XAmzTarget35(Enum):
    AWSHawksNestServiceFacade_GetEntityTypes = (
        'AWSHawksNestServiceFacade.GetEntityTypes'
    )


class XAmzTarget36(Enum):
    AWSHawksNestServiceFacade_GetEvent = 'AWSHawksNestServiceFacade.GetEvent'


class XAmzTarget37(Enum):
    AWSHawksNestServiceFacade_GetEventPrediction = (
        'AWSHawksNestServiceFacade.GetEventPrediction'
    )


class XAmzTarget38(Enum):
    AWSHawksNestServiceFacade_GetEventPredictionMetadata = (
        'AWSHawksNestServiceFacade.GetEventPredictionMetadata'
    )


class XAmzTarget39(Enum):
    AWSHawksNestServiceFacade_GetEventTypes = 'AWSHawksNestServiceFacade.GetEventTypes'


class XAmzTarget40(Enum):
    AWSHawksNestServiceFacade_GetExternalModels = (
        'AWSHawksNestServiceFacade.GetExternalModels'
    )


class XAmzTarget41(Enum):
    AWSHawksNestServiceFacade_GetKMSEncryptionKey = (
        'AWSHawksNestServiceFacade.GetKMSEncryptionKey'
    )


class XAmzTarget42(Enum):
    AWSHawksNestServiceFacade_GetLabels = 'AWSHawksNestServiceFacade.GetLabels'


class XAmzTarget43(Enum):
    AWSHawksNestServiceFacade_GetListElements = (
        'AWSHawksNestServiceFacade.GetListElements'
    )


class XAmzTarget44(Enum):
    AWSHawksNestServiceFacade_GetListsMetadata = (
        'AWSHawksNestServiceFacade.GetListsMetadata'
    )


class XAmzTarget45(Enum):
    AWSHawksNestServiceFacade_GetModelVersion = (
        'AWSHawksNestServiceFacade.GetModelVersion'
    )


class XAmzTarget46(Enum):
    AWSHawksNestServiceFacade_GetModels = 'AWSHawksNestServiceFacade.GetModels'


class XAmzTarget47(Enum):
    AWSHawksNestServiceFacade_GetOutcomes = 'AWSHawksNestServiceFacade.GetOutcomes'


class XAmzTarget48(Enum):
    AWSHawksNestServiceFacade_GetRules = 'AWSHawksNestServiceFacade.GetRules'


class XAmzTarget49(Enum):
    AWSHawksNestServiceFacade_GetVariables = 'AWSHawksNestServiceFacade.GetVariables'


class XAmzTarget50(Enum):
    AWSHawksNestServiceFacade_ListEventPredictions = (
        'AWSHawksNestServiceFacade.ListEventPredictions'
    )


class XAmzTarget51(Enum):
    AWSHawksNestServiceFacade_ListTagsForResource = (
        'AWSHawksNestServiceFacade.ListTagsForResource'
    )


class XAmzTarget52(Enum):
    AWSHawksNestServiceFacade_PutDetector = 'AWSHawksNestServiceFacade.PutDetector'


class XAmzTarget53(Enum):
    AWSHawksNestServiceFacade_PutEntityType = 'AWSHawksNestServiceFacade.PutEntityType'


class XAmzTarget54(Enum):
    AWSHawksNestServiceFacade_PutEventType = 'AWSHawksNestServiceFacade.PutEventType'


class XAmzTarget55(Enum):
    AWSHawksNestServiceFacade_PutExternalModel = (
        'AWSHawksNestServiceFacade.PutExternalModel'
    )


class XAmzTarget56(Enum):
    AWSHawksNestServiceFacade_PutKMSEncryptionKey = (
        'AWSHawksNestServiceFacade.PutKMSEncryptionKey'
    )


class XAmzTarget57(Enum):
    AWSHawksNestServiceFacade_PutLabel = 'AWSHawksNestServiceFacade.PutLabel'


class XAmzTarget58(Enum):
    AWSHawksNestServiceFacade_PutOutcome = 'AWSHawksNestServiceFacade.PutOutcome'


class XAmzTarget59(Enum):
    AWSHawksNestServiceFacade_SendEvent = 'AWSHawksNestServiceFacade.SendEvent'


class XAmzTarget60(Enum):
    AWSHawksNestServiceFacade_TagResource = 'AWSHawksNestServiceFacade.TagResource'


class XAmzTarget61(Enum):
    AWSHawksNestServiceFacade_UntagResource = 'AWSHawksNestServiceFacade.UntagResource'


class XAmzTarget62(Enum):
    AWSHawksNestServiceFacade_UpdateDetectorVersion = (
        'AWSHawksNestServiceFacade.UpdateDetectorVersion'
    )


class XAmzTarget63(Enum):
    AWSHawksNestServiceFacade_UpdateDetectorVersionMetadata = (
        'AWSHawksNestServiceFacade.UpdateDetectorVersionMetadata'
    )


class XAmzTarget64(Enum):
    AWSHawksNestServiceFacade_UpdateDetectorVersionStatus = (
        'AWSHawksNestServiceFacade.UpdateDetectorVersionStatus'
    )


class XAmzTarget65(Enum):
    AWSHawksNestServiceFacade_UpdateEventLabel = (
        'AWSHawksNestServiceFacade.UpdateEventLabel'
    )


class XAmzTarget66(Enum):
    AWSHawksNestServiceFacade_UpdateList = 'AWSHawksNestServiceFacade.UpdateList'


class XAmzTarget67(Enum):
    AWSHawksNestServiceFacade_UpdateModel = 'AWSHawksNestServiceFacade.UpdateModel'


class XAmzTarget68(Enum):
    AWSHawksNestServiceFacade_UpdateModelVersion = (
        'AWSHawksNestServiceFacade.UpdateModelVersion'
    )


class XAmzTarget69(Enum):
    AWSHawksNestServiceFacade_UpdateModelVersionStatus = (
        'AWSHawksNestServiceFacade.UpdateModelVersionStatus'
    )


class XAmzTarget70(Enum):
    AWSHawksNestServiceFacade_UpdateRuleMetadata = (
        'AWSHawksNestServiceFacade.UpdateRuleMetadata'
    )


class XAmzTarget71(Enum):
    AWSHawksNestServiceFacade_UpdateRuleVersion = (
        'AWSHawksNestServiceFacade.UpdateRuleVersion'
    )


class XAmzTarget72(Enum):
    AWSHawksNestServiceFacade_UpdateVariable = (
        'AWSHawksNestServiceFacade.UpdateVariable'
    )


class ATIMetricDataPoint(BaseModel):
    adr: Optional[Float] = None
    atodr: Optional[Float] = None
    cr: Optional[Float] = None
    threshold: Optional[Float] = None


class ATIMetricDataPointsList(RootModel[List[ATIMetricDataPoint]]):
    root: List[ATIMetricDataPoint]


class ATIModelPerformance(BaseModel):
    asi: Optional[Float] = None


class ATITrainingMetricsValue(BaseModel):
    metricDataPoints: Optional[ATIMetricDataPointsList] = None
    modelPerformance: Optional[ATIModelPerformance] = None


class AllowDenyList(BaseModel):
    arn: Optional[FraudDetectorArn] = None
    createdTime: Optional[Time] = None
    description: Optional[Description] = None
    name: NoDashIdentifier
    updatedTime: Optional[Time] = None
    variableType: Optional[VariableType] = None


class AllowDenyLists(RootModel[List[AllowDenyList]]):
    root: List[AllowDenyList]


class BatchCreateVariableError(BaseModel):
    code: Optional[Integer] = None
    message: Optional[String] = None
    name: Optional[String] = None


class BatchCreateVariableErrorList(RootModel[List[BatchCreateVariableError]]):
    root: List[BatchCreateVariableError]


class BatchCreateVariableResult(BaseModel):
    errors: Optional[BatchCreateVariableErrorList] = None


class BatchGetVariableError(BaseModel):
    code: Optional[Integer] = None
    message: Optional[String] = None
    name: Optional[String] = None


class BatchGetVariableErrorList(RootModel[List[BatchGetVariableError]]):
    root: List[BatchGetVariableError]


class BatchImport(BaseModel):
    arn: Optional[FraudDetectorArn] = None
    completionTime: Optional[Time] = None
    eventTypeName: Optional[Identifier] = None
    failedRecordsCount: Optional[Integer] = None
    failureReason: Optional[String] = None
    iamRoleArn: Optional[IamRoleArn] = None
    inputPath: Optional[S3BucketLocation] = None
    jobId: Optional[Identifier] = None
    outputPath: Optional[S3BucketLocation] = None
    processedRecordsCount: Optional[Integer] = None
    startTime: Optional[Time] = None
    status: Optional[AsyncJobStatus] = None
    totalRecordsCount: Optional[Integer] = None


class BatchImportList(RootModel[List[BatchImport]]):
    root: List[BatchImport]


class BatchPrediction(BaseModel):
    arn: Optional[FraudDetectorArn] = None
    completionTime: Optional[Time] = None
    detectorName: Optional[Identifier] = None
    detectorVersion: Optional[FloatVersionString] = None
    eventTypeName: Optional[Identifier] = None
    failureReason: Optional[String] = None
    iamRoleArn: Optional[IamRoleArn] = None
    inputPath: Optional[S3BucketLocation] = None
    jobId: Optional[Identifier] = None
    lastHeartbeatTime: Optional[Time] = None
    outputPath: Optional[S3BucketLocation] = None
    processedRecordsCount: Optional[Integer] = None
    startTime: Optional[Time] = None
    status: Optional[AsyncJobStatus] = None
    totalRecordsCount: Optional[Integer] = None


class BatchPredictionList(RootModel[List[BatchPrediction]]):
    root: List[BatchPrediction]


class CancelBatchImportJobRequest(BaseModel):
    jobId: Identifier


class CancelBatchPredictionJobRequest(BaseModel):
    jobId: Identifier


class CreateDetectorVersionResult(BaseModel):
    detectorId: Optional[Identifier] = None
    detectorVersionId: Optional[WholeNumberVersionString] = None
    status: Optional[DetectorVersionStatus] = None


class CreateModelVersionResult(BaseModel):
    modelId: Optional[ModelIdentifier] = None
    modelType: Optional[ModelTypeEnum] = None
    modelVersionNumber: Optional[FloatVersionString] = None
    status: Optional[String] = None


class CsvIndexToVariableMap(RootModel[Optional[Dict[str, String]]]):
    root: Optional[Dict[str, String]] = None


class DeleteBatchImportJobRequest(BaseModel):
    jobId: Identifier


class DeleteBatchPredictionJobRequest(BaseModel):
    jobId: Identifier


class DeleteDetectorRequest(BaseModel):
    detectorId: Identifier


class DeleteDetectorVersionRequest(BaseModel):
    detectorId: Identifier
    detectorVersionId: WholeNumberVersionString


class DeleteEntityTypeRequest(BaseModel):
    name: Identifier


class DeleteEventRequest(BaseModel):
    deleteAuditHistory: Optional[DeleteAuditHistory] = None
    eventId: Identifier
    eventTypeName: Identifier


class DeleteEventTypeRequest(BaseModel):
    name: Identifier


class DeleteEventsByEventTypeRequest(BaseModel):
    eventTypeName: Identifier


class DeleteEventsByEventTypeResult(BaseModel):
    eventTypeName: Optional[Identifier] = None
    eventsDeletionStatus: Optional[String] = None


class DeleteExternalModelRequest(BaseModel):
    modelEndpoint: SageMakerEndpointIdentifier


class DeleteLabelRequest(BaseModel):
    name: Identifier


class DeleteListRequest(BaseModel):
    name: NoDashIdentifier


class DeleteModelRequest(BaseModel):
    modelId: ModelIdentifier
    modelType: ModelTypeEnum


class DeleteModelVersionRequest(BaseModel):
    modelId: ModelIdentifier
    modelType: ModelTypeEnum
    modelVersionNumber: FloatVersionString


class DeleteOutcomeRequest(BaseModel):
    name: Identifier


class DeleteVariableRequest(BaseModel):
    name: String


class DescribeDetectorRequest(BaseModel):
    detectorId: Identifier
    maxResults: Optional[DetectorVersionMaxResults] = None
    nextToken: Optional[String] = None


class DescribeModelVersionsRequest(BaseModel):
    maxResults: Optional[ModelsMaxPageSize] = None
    modelId: Optional[ModelIdentifier] = None
    modelType: Optional[ModelTypeEnum] = None
    modelVersionNumber: Optional[FloatVersionString] = None
    nextToken: Optional[String] = None


class Detector(BaseModel):
    arn: Optional[FraudDetectorArn] = None
    createdTime: Optional[Time] = None
    description: Optional[Description] = None
    detectorId: Optional[Identifier] = None
    eventTypeName: Optional[Identifier] = None
    lastUpdatedTime: Optional[Time] = None


class DetectorList(RootModel[List[Detector]]):
    root: List[Detector]


class DetectorVersionSummary(BaseModel):
    description: Optional[Description] = None
    detectorVersionId: Optional[WholeNumberVersionString] = None
    lastUpdatedTime: Optional[Time] = None
    status: Optional[DetectorVersionStatus] = None


class DetectorVersionSummaryList(RootModel[List[DetectorVersionSummary]]):
    root: List[DetectorVersionSummary]


class Entity(BaseModel):
    entityId: EntityRestrictedString
    entityType: String


class EntityType(BaseModel):
    arn: Optional[FraudDetectorArn] = None
    createdTime: Optional[Time] = None
    description: Optional[Description] = None
    lastUpdatedTime: Optional[Time] = None
    name: Optional[String] = None


class EventAttributeMap(RootModel[Optional[Dict[str, AttributeValue]]]):
    root: Optional[Dict[str, AttributeValue]] = None


class EventPredictionSummary(BaseModel):
    detectorId: Optional[Identifier] = None
    detectorVersionId: Optional[WholeNumberVersionString] = None
    eventId: Optional[Identifier] = None
    eventTimestamp: Optional[Time] = None
    eventTypeName: Optional[Identifier] = None
    predictionTimestamp: Optional[Time] = None


class EventVariableMap(RootModel[Optional[Dict[str, VariableValue]]]):
    root: Optional[Dict[str, VariableValue]] = None


class EventVariableSummary(BaseModel):
    name: Optional[SensitiveString] = None
    source: Optional[SensitiveString] = None
    value: Optional[SensitiveString] = None


class ExternalEventsDetail(BaseModel):
    dataAccessRoleArn: IamRoleArn
    dataLocation: S3BucketLocation


class ExternalModelPredictionMap(RootModel[Optional[Dict[str, String]]]):
    root: Optional[Dict[str, String]] = None


class ExternalModelSummary(BaseModel):
    modelEndpoint: Optional[String] = None
    modelSource: Optional[ModelSource] = None


class FieldValidationMessage(BaseModel):
    content: Optional[String] = None
    fieldName: Optional[String] = None
    identifier: Optional[String] = None
    title: Optional[String] = None
    type: Optional[String] = None


class FileValidationMessage(BaseModel):
    content: Optional[String] = None
    title: Optional[String] = None
    type: Optional[String] = None


class FilterCondition(BaseModel):
    value: Optional[FilterString] = None


class GetBatchImportJobsRequest(BaseModel):
    jobId: Optional[Identifier] = None
    maxResults: Optional[BatchImportsMaxPageSize] = None
    nextToken: Optional[String] = None


class GetBatchImportJobsResult(BaseModel):
    batchImports: Optional[BatchImportList] = None
    nextToken: Optional[String] = None


class GetBatchPredictionJobsRequest(BaseModel):
    jobId: Optional[Identifier] = None
    maxResults: Optional[BatchPredictionsMaxPageSize] = None
    nextToken: Optional[String] = None


class GetBatchPredictionJobsResult(BaseModel):
    batchPredictions: Optional[BatchPredictionList] = None
    nextToken: Optional[String] = None


class GetDeleteEventsByEventTypeStatusRequest(BaseModel):
    eventTypeName: Identifier


class GetDeleteEventsByEventTypeStatusResult(BaseModel):
    eventTypeName: Optional[Identifier] = None
    eventsDeletionStatus: Optional[AsyncJobStatus] = None


class GetDetectorVersionRequest(BaseModel):
    detectorId: Identifier
    detectorVersionId: WholeNumberVersionString


class GetDetectorsRequest(BaseModel):
    detectorId: Optional[Identifier] = None
    maxResults: Optional[DetectorsMaxResults] = None
    nextToken: Optional[String] = None


class GetDetectorsResult(BaseModel):
    detectors: Optional[DetectorList] = None
    nextToken: Optional[String] = None


class GetEntityTypesRequest(BaseModel):
    maxResults: Optional[EntityTypesMaxResults] = None
    name: Optional[Identifier] = None
    nextToken: Optional[String] = None


class GetEventPredictionMetadataRequest(BaseModel):
    detectorId: Identifier
    detectorVersionId: WholeNumberVersionString
    eventId: Identifier
    eventTypeName: Identifier
    predictionTimestamp: Time


class GetEventRequest(BaseModel):
    eventId: String
    eventTypeName: String


class GetEventTypesRequest(BaseModel):
    maxResults: Optional[EventTypesMaxResults] = None
    name: Optional[Identifier] = None
    nextToken: Optional[String] = None


class GetExternalModelsRequest(BaseModel):
    maxResults: Optional[ExternalModelsMaxResults] = None
    modelEndpoint: Optional[String] = None
    nextToken: Optional[String] = None


class GetLabelsRequest(BaseModel):
    maxResults: Optional[LabelsMaxResults] = None
    name: Optional[Identifier] = None
    nextToken: Optional[String] = None


class GetListElementsRequest(BaseModel):
    maxResults: Optional[ListsElementsMaxResults] = None
    name: NoDashIdentifier
    nextToken: Optional[NextToken] = None


class GetListElementsResult(BaseModel):
    elements: Optional[ElementsList] = None
    nextToken: Optional[NextToken] = None


class GetListsMetadataRequest(BaseModel):
    maxResults: Optional[ListsMetadataMaxResults] = None
    name: Optional[NoDashIdentifier] = None
    nextToken: Optional[NextToken] = None


class GetListsMetadataResult(BaseModel):
    lists: Optional[AllowDenyLists] = None
    nextToken: Optional[NextToken] = None


class GetModelVersionRequest(BaseModel):
    modelId: ModelIdentifier
    modelType: ModelTypeEnum
    modelVersionNumber: FloatVersionString


class GetModelsRequest(BaseModel):
    maxResults: Optional[ModelsMaxPageSize] = None
    modelId: Optional[ModelIdentifier] = None
    modelType: Optional[ModelTypeEnum] = None
    nextToken: Optional[String] = None


class GetOutcomesRequest(BaseModel):
    maxResults: Optional[OutcomesMaxResults] = None
    name: Optional[Identifier] = None
    nextToken: Optional[String] = None


class GetRulesRequest(BaseModel):
    detectorId: Identifier
    maxResults: Optional[RulesMaxResults] = None
    nextToken: Optional[String] = None
    ruleId: Optional[Identifier] = None
    ruleVersion: Optional[WholeNumberVersionString] = None


class GetVariablesRequest(BaseModel):
    maxResults: Optional[VariablesMaxResults] = None
    name: Optional[String] = None
    nextToken: Optional[String] = None


class IngestedEventStatistics(BaseModel):
    eventDataSizeInBytes: Optional[Long] = None
    lastUpdatedTime: Optional[Time] = None
    leastRecentEvent: Optional[Time] = None
    mostRecentEvent: Optional[Time] = None
    numberOfEvents: Optional[Long] = None


class IngestedEventsTimeWindow(BaseModel):
    endTime: Time
    startTime: Time


class JsonKeyToVariableMap(RootModel[Optional[Dict[str, String]]]):
    root: Optional[Dict[str, String]] = None


class KMSKey(BaseModel):
    kmsEncryptionKeyArn: Optional[KmsEncryptionKeyArn] = None


class Label(BaseModel):
    arn: Optional[FraudDetectorArn] = None
    createdTime: Optional[Time] = None
    description: Optional[Description] = None
    lastUpdatedTime: Optional[Time] = None
    name: Optional[String] = None


class ListOfEventPredictionSummaries(RootModel[List[EventPredictionSummary]]):
    root: List[EventPredictionSummary]


class ListOfEventVariableSummaries(RootModel[List[EventVariableSummary]]):
    root: List[EventVariableSummary]


class ListOfStrings(RootModel[List[String]]):
    root: List[String]


class ListTagsForResourceRequest(BaseModel):
    maxResults: Optional[TagsMaxResults] = None
    nextToken: Optional[String] = None
    resourceARN: FraudDetectorArn


class LogOddsMetric(BaseModel):
    variableImportance: Float
    variableName: String
    variableType: String


class MapOfStrings(RootModel[Optional[Dict[str, String]]]):
    root: Optional[Dict[str, String]] = None


class MetricDataPoint(BaseModel):
    fpr: Optional[Float] = None
    precision: Optional[Float] = None
    threshold: Optional[Float] = None
    tpr: Optional[Float] = None


class Model(BaseModel):
    arn: Optional[FraudDetectorArn] = None
    createdTime: Optional[Time] = None
    description: Optional[Description] = None
    eventTypeName: Optional[String] = None
    lastUpdatedTime: Optional[Time] = None
    modelId: Optional[ModelIdentifier] = None
    modelType: Optional[ModelTypeEnum] = None


class ModelEndpointDataBlob(BaseModel):
    byteBuffer: Optional[Blob] = None
    contentType: Optional[ContentType] = None


class ModelInputConfiguration(BaseModel):
    csvInputTemplate: Optional[ModelInputTemplate] = None
    eventTypeName: Optional[Identifier] = None
    format: Optional[ModelInputDataFormat] = None
    jsonInputTemplate: Optional[ModelInputTemplate] = None
    useEventVariables: UseEventVariables


class ModelOutputConfiguration(BaseModel):
    csvIndexToVariableMap: Optional[CsvIndexToVariableMap] = None
    format: ModelOutputDataFormat
    jsonKeyToVariableMap: Optional[JsonKeyToVariableMap] = None


class ModelPredictionMap(RootModel[Optional[Dict[str, Float]]]):
    root: Optional[Dict[str, Float]] = None


class ModelVersion(BaseModel):
    arn: Optional[FraudDetectorArn] = None
    modelId: ModelIdentifier
    modelType: ModelTypeEnum
    modelVersionNumber: FloatVersionString


class NameList(RootModel[List[String]]):
    root: List[String] = Field(..., max_length=100, min_length=1)


class NonEmptyListOfStrings(RootModel[List[String]]):
    root: List[String] = Field(..., min_length=1)


class OFIMetricDataPoint(BaseModel):
    fpr: Optional[Float] = None
    precision: Optional[Float] = None
    threshold: Optional[Float] = None
    tpr: Optional[Float] = None


class OFIMetricDataPointsList(RootModel[List[OFIMetricDataPoint]]):
    root: List[OFIMetricDataPoint]


class Outcome(BaseModel):
    arn: Optional[FraudDetectorArn] = None
    createdTime: Optional[Time] = None
    description: Optional[Description] = None
    lastUpdatedTime: Optional[Time] = None
    name: Optional[Identifier] = None


class OutcomeList(RootModel[List[Outcome]]):
    root: List[Outcome]


class PredictionTimeRange(BaseModel):
    endTime: Time
    startTime: Time


class Rule(BaseModel):
    detectorId: Identifier
    ruleId: Identifier
    ruleVersion: WholeNumberVersionString


class RuleDetail(BaseModel):
    arn: Optional[FraudDetectorArn] = None
    createdTime: Optional[Time] = None
    description: Optional[Description] = None
    detectorId: Optional[Identifier] = None
    expression: Optional[RuleExpression] = None
    language: Optional[Language] = None
    lastUpdatedTime: Optional[Time] = None
    outcomes: Optional[NonEmptyListOfStrings] = None
    ruleId: Optional[Identifier] = None
    ruleVersion: Optional[WholeNumberVersionString] = None


class RuleDetailList(RootModel[List[RuleDetail]]):
    root: List[RuleDetail]


class RuleList(RootModel[List[Rule]]):
    root: List[Rule]


class RuleResult(BaseModel):
    outcomes: Optional[ListOfStrings] = None
    ruleId: Optional[String] = None


class TFIMetricDataPoint(BaseModel):
    fpr: Optional[Float] = None
    precision: Optional[Float] = None
    threshold: Optional[Float] = None
    tpr: Optional[Float] = None


class TFIMetricDataPointsList(RootModel[List[TFIMetricDataPoint]]):
    root: List[TFIMetricDataPoint]


class Tag(BaseModel):
    key: TagKey
    value: TagValue


class UncertaintyRange(BaseModel):
    lowerBoundValue: Float
    upperBoundValue: Float


class UntagResourceRequest(BaseModel):
    resourceARN: FraudDetectorArn
    tagKeys: TagKeyList


class UpdateDetectorVersionMetadataRequest(BaseModel):
    description: Description
    detectorId: Identifier
    detectorVersionId: WholeNumberVersionString


class UpdateDetectorVersionStatusRequest(BaseModel):
    detectorId: Identifier
    detectorVersionId: WholeNumberVersionString
    status: DetectorVersionStatus


class UpdateEventLabelRequest(BaseModel):
    assignedLabel: Identifier
    eventId: Identifier
    eventTypeName: Identifier
    labelTimestamp: UtcTimestampISO8601


class UpdateListRequest(BaseModel):
    description: Optional[Description] = None
    elements: Optional[ElementsList] = None
    name: NoDashIdentifier
    updateMode: Optional[ListUpdateMode] = None
    variableType: Optional[VariableType] = None


class UpdateModelRequest(BaseModel):
    description: Optional[Description] = None
    modelId: ModelIdentifier
    modelType: ModelTypeEnum


class UpdateModelVersionResult(BaseModel):
    modelId: Optional[ModelIdentifier] = None
    modelType: Optional[ModelTypeEnum] = None
    modelVersionNumber: Optional[FloatVersionString] = None
    status: Optional[String] = None


class UpdateModelVersionStatusRequest(BaseModel):
    modelId: ModelIdentifier
    modelType: ModelTypeEnum
    modelVersionNumber: FloatVersionString
    status: ModelVersionStatus


class UpdateRuleMetadataRequest(BaseModel):
    description: Description
    rule: Rule


class UpdateRuleVersionResult(BaseModel):
    rule: Optional[Rule] = None


class UpdateVariableRequest(BaseModel):
    defaultValue: Optional[String] = None
    description: Optional[String] = None
    name: String
    variableType: Optional[String] = None


class Variable(BaseModel):
    arn: Optional[FraudDetectorArn] = None
    createdTime: Optional[Time] = None
    dataSource: Optional[DataSource] = None
    dataType: Optional[DataType] = None
    defaultValue: Optional[String] = None
    description: Optional[String] = None
    lastUpdatedTime: Optional[Time] = None
    name: Optional[String] = None
    variableType: Optional[String] = None


class VariableEntry(BaseModel):
    dataSource: Optional[String] = None
    dataType: Optional[String] = None
    defaultValue: Optional[String] = None
    description: Optional[String] = None
    name: Optional[String] = None
    variableType: Optional[String] = None


class VariableEntryList(RootModel[List[VariableEntry]]):
    root: List[VariableEntry] = Field(..., max_length=25, min_length=1)


class VariableImpactExplanation(BaseModel):
    eventVariableName: Optional[String] = None
    logOddsImpact: Optional[Float] = None
    relativeImpact: Optional[String] = None


class VariableList(RootModel[List[Variable]]):
    root: List[Variable]


class EntityTypeList(RootModel[List[EntityType]]):
    root: List[EntityType]


class FieldValidationMessageList(RootModel[List[FieldValidationMessage]]):
    root: List[FieldValidationMessage]


class FileValidationMessageList(RootModel[List[FileValidationMessage]]):
    root: List[FileValidationMessage]


class LabelList(RootModel[List[Label]]):
    root: List[Label]


class LabelMapper(RootModel[Optional[Dict[str, ListOfStrings]]]):
    root: Optional[Dict[str, ListOfStrings]] = None


class ListOfEntities(RootModel[List[Entity]]):
    root: List[Entity]


class ListOfVariableImpactExplanations(RootModel[List[VariableImpactExplanation]]):
    root: List[VariableImpactExplanation]


class MetricDataPointsList(RootModel[List[MetricDataPoint]]):
    root: List[MetricDataPoint]


class ModelList(RootModel[List[Model]]):
    root: List[Model]


class TagList(RootModel[List[Tag]]):
    root: List[Tag] = Field(..., max_length=200, min_length=0)


class AggregatedLogOddsMetric(BaseModel):
    aggregatedVariablesImportance: Float
    variableNames: ListOfStrings


class AggregatedVariablesImpactExplanation(BaseModel):
    eventVariableNames: Optional[ListOfStrings] = None
    logOddsImpact: Optional[Float] = None
    relativeImpact: Optional[String] = None


class BatchCreateVariableRequest(BaseModel):
    tags: Optional[TagList] = None
    variableEntries: VariableEntryList


class BatchGetVariableRequest(BaseModel):
    names: NameList


class BatchGetVariableResult(BaseModel):
    errors: Optional[BatchGetVariableErrorList] = None
    variables: Optional[VariableList] = None


class CreateBatchImportJobRequest(BaseModel):
    eventTypeName: Identifier
    iamRoleArn: IamRoleArn
    inputPath: S3BucketLocation
    jobId: Identifier
    outputPath: S3BucketLocation
    tags: Optional[TagList] = None


class CreateBatchPredictionJobRequest(BaseModel):
    detectorName: Identifier
    detectorVersion: Optional[WholeNumberVersionString] = None
    eventTypeName: Identifier
    iamRoleArn: IamRoleArn
    inputPath: S3BucketLocation
    jobId: Identifier
    outputPath: S3BucketLocation
    tags: Optional[TagList] = None


class CreateListRequest(BaseModel):
    description: Optional[Description] = None
    elements: Optional[ElementsList] = None
    name: NoDashIdentifier
    tags: Optional[TagList] = None
    variableType: Optional[VariableType] = None


class CreateModelRequest(BaseModel):
    description: Optional[Description] = None
    eventTypeName: String
    modelId: ModelIdentifier
    modelType: ModelTypeEnum
    tags: Optional[TagList] = None


class CreateRuleRequest(BaseModel):
    description: Optional[Description] = None
    detectorId: Identifier
    expression: RuleExpression
    language: Language
    outcomes: NonEmptyListOfStrings
    ruleId: Identifier
    tags: Optional[TagList] = None


class CreateRuleResult(BaseModel):
    rule: Optional[Rule] = None


class CreateVariableRequest(BaseModel):
    dataSource: DataSource
    dataType: DataType
    defaultValue: String
    description: Optional[String] = None
    name: String
    tags: Optional[TagList] = None
    variableType: Optional[String] = None


class DataValidationMetrics(BaseModel):
    fieldLevelMessages: Optional[FieldValidationMessageList] = None
    fileLevelMessages: Optional[FileValidationMessageList] = None


class DeleteRuleRequest(BaseModel):
    rule: Rule


class DescribeDetectorResult(BaseModel):
    arn: Optional[FraudDetectorArn] = None
    detectorId: Optional[Identifier] = None
    detectorVersionSummaries: Optional[DetectorVersionSummaryList] = None
    nextToken: Optional[String] = None


class EvaluatedExternalModel(BaseModel):
    inputVariables: Optional[MapOfStrings] = None
    modelEndpoint: Optional[String] = None
    outputVariables: Optional[MapOfStrings] = None
    useEventVariables: Optional[Boolean] = None


class EvaluatedRule(BaseModel):
    evaluated: Optional[Boolean] = None
    expression: Optional[SensitiveString] = None
    expressionWithValues: Optional[SensitiveString] = None
    matched: Optional[Boolean] = None
    outcomes: Optional[ListOfStrings] = None
    ruleId: Optional[Identifier] = None
    ruleVersion: Optional[WholeNumberVersionString] = None


class EvaluatedRuleList(RootModel[List[EvaluatedRule]]):
    root: List[EvaluatedRule]


class Event(BaseModel):
    currentLabel: Optional[String] = None
    entities: Optional[ListOfEntities] = None
    eventId: Optional[String] = None
    eventTimestamp: Optional[String] = None
    eventTypeName: Optional[String] = None
    eventVariables: Optional[EventAttributeMap] = None
    labelTimestamp: Optional[String] = None


class EventType(BaseModel):
    arn: Optional[FraudDetectorArn] = None
    createdTime: Optional[Time] = None
    description: Optional[Description] = None
    entityTypes: Optional[NonEmptyListOfStrings] = None
    eventIngestion: Optional[EventIngestion] = None
    eventVariables: Optional[ListOfStrings] = None
    ingestedEventStatistics: Optional[IngestedEventStatistics] = None
    labels: Optional[ListOfStrings] = None
    lastUpdatedTime: Optional[Time] = None
    name: Optional[String] = None


class ExternalModel(BaseModel):
    arn: Optional[FraudDetectorArn] = None
    createdTime: Optional[Time] = None
    inputConfiguration: Optional[ModelInputConfiguration] = None
    invokeModelEndpointRoleArn: Optional[String] = None
    lastUpdatedTime: Optional[Time] = None
    modelEndpoint: Optional[String] = None
    modelEndpointStatus: Optional[ModelEndpointStatus] = None
    modelSource: Optional[ModelSource] = None
    outputConfiguration: Optional[ModelOutputConfiguration] = None


class ExternalModelEndpointDataBlobMap(
    RootModel[Optional[Dict[str, ModelEndpointDataBlob]]]
):
    root: Optional[Dict[str, ModelEndpointDataBlob]] = None


class ExternalModelList(RootModel[List[ExternalModel]]):
    root: List[ExternalModel]


class ExternalModelOutputs(BaseModel):
    externalModel: Optional[ExternalModelSummary] = None
    outputs: Optional[ExternalModelPredictionMap] = None


class GetEntityTypesResult(BaseModel):
    entityTypes: Optional[EntityTypeList] = None
    nextToken: Optional[String] = None


class GetEventPredictionRequest(BaseModel):
    detectorId: String
    detectorVersionId: Optional[WholeNumberVersionString] = None
    entities: ListOfEntities
    eventId: String
    eventTimestamp: UtcTimestampISO8601
    eventTypeName: String
    eventVariables: EventVariableMap
    externalModelEndpointDataBlobs: Optional[ExternalModelEndpointDataBlobMap] = None


class GetEventResult(BaseModel):
    event: Optional[Event] = None


class GetExternalModelsResult(BaseModel):
    externalModels: Optional[ExternalModelList] = None
    nextToken: Optional[String] = None


class GetKMSEncryptionKeyResult(BaseModel):
    kmsKey: Optional[KMSKey] = None


class GetLabelsResult(BaseModel):
    labels: Optional[LabelList] = None
    nextToken: Optional[String] = None


class GetModelsResult(BaseModel):
    models: Optional[ModelList] = None
    nextToken: Optional[String] = None


class GetOutcomesResult(BaseModel):
    nextToken: Optional[String] = None
    outcomes: Optional[OutcomeList] = None


class GetRulesResult(BaseModel):
    nextToken: Optional[String] = None
    ruleDetails: Optional[RuleDetailList] = None


class GetVariablesResult(BaseModel):
    nextToken: Optional[String] = None
    variables: Optional[VariableList] = None


class IngestedEventsDetail(BaseModel):
    ingestedEventsTimeWindow: IngestedEventsTimeWindow


class LabelSchema(BaseModel):
    labelMapper: Optional[LabelMapper] = None
    unlabeledEventsTreatment: Optional[UnlabeledEventsTreatment] = None


class ListEventPredictionsRequest(BaseModel):
    detectorId: Optional[FilterCondition] = None
    detectorVersionId: Optional[FilterCondition] = None
    eventId: Optional[FilterCondition] = None
    eventType: Optional[FilterCondition] = None
    maxResults: Optional[EventPredictionsMaxResults] = None
    nextToken: Optional[String] = None
    predictionTimeRange: Optional[PredictionTimeRange] = None


class ListEventPredictionsResult(BaseModel):
    eventPredictionSummaries: Optional[ListOfEventPredictionSummaries] = None
    nextToken: Optional[String] = None


class ListOfAggregatedLogOddsMetrics(RootModel[List[AggregatedLogOddsMetric]]):
    root: List[AggregatedLogOddsMetric]


class ListOfAggregatedVariablesImpactExplanations(
    RootModel[List[AggregatedVariablesImpactExplanation]]
):
    root: List[AggregatedVariablesImpactExplanation]


class ListOfEvaluatedExternalModels(RootModel[List[EvaluatedExternalModel]]):
    root: List[EvaluatedExternalModel]


class ListOfExternalModelOutputs(RootModel[List[ExternalModelOutputs]]):
    root: List[ExternalModelOutputs]


class ListOfLogOddsMetrics(RootModel[List[LogOddsMetric]]):
    root: List[LogOddsMetric]


class ListOfModelVersions(RootModel[List[ModelVersion]]):
    root: List[ModelVersion]


class ListOfRuleResults(RootModel[List[RuleResult]]):
    root: List[RuleResult]


class ListTagsForResourceResult(BaseModel):
    nextToken: Optional[String] = None
    tags: Optional[TagList] = None


class ModelScores(BaseModel):
    modelVersion: Optional[ModelVersion] = None
    scores: Optional[ModelPredictionMap] = None


class OFIModelPerformance(BaseModel):
    auc: Optional[Float] = None
    uncertaintyRange: Optional[UncertaintyRange] = None


class OFITrainingMetricsValue(BaseModel):
    metricDataPoints: Optional[OFIMetricDataPointsList] = None
    modelPerformance: Optional[OFIModelPerformance] = None


class PredictionExplanations(BaseModel):
    aggregatedVariablesImpactExplanations: Optional[
        ListOfAggregatedVariablesImpactExplanations
    ] = None
    variableImpactExplanations: Optional[ListOfVariableImpactExplanations] = None


class PutDetectorRequest(BaseModel):
    description: Optional[Description] = None
    detectorId: Identifier
    eventTypeName: Identifier
    tags: Optional[TagList] = None


class PutEntityTypeRequest(BaseModel):
    description: Optional[Description] = None
    name: Identifier
    tags: Optional[TagList] = None


class PutEventTypeRequest(BaseModel):
    description: Optional[Description] = None
    entityTypes: NonEmptyListOfStrings
    eventIngestion: Optional[EventIngestion] = None
    eventVariables: NonEmptyListOfStrings
    labels: Optional[ListOfStrings] = None
    name: Identifier
    tags: Optional[TagList] = None


class PutExternalModelRequest(BaseModel):
    inputConfiguration: ModelInputConfiguration
    invokeModelEndpointRoleArn: String
    modelEndpoint: SageMakerEndpointIdentifier
    modelEndpointStatus: ModelEndpointStatus
    modelSource: ModelSource
    outputConfiguration: ModelOutputConfiguration
    tags: Optional[TagList] = None


class PutLabelRequest(BaseModel):
    description: Optional[Description] = None
    name: Identifier
    tags: Optional[TagList] = None


class PutOutcomeRequest(BaseModel):
    description: Optional[Description] = None
    name: Identifier
    tags: Optional[TagList] = None


class SendEventRequest(BaseModel):
    assignedLabel: Optional[Identifier] = None
    entities: ListOfEntities
    eventId: Identifier
    eventTimestamp: UtcTimestampISO8601
    eventTypeName: Identifier
    eventVariables: EventVariableMap
    labelTimestamp: Optional[UtcTimestampISO8601] = None


class TFIModelPerformance(BaseModel):
    auc: Optional[Float] = None
    uncertaintyRange: Optional[UncertaintyRange] = None


class TFITrainingMetricsValue(BaseModel):
    metricDataPoints: Optional[TFIMetricDataPointsList] = None
    modelPerformance: Optional[TFIModelPerformance] = None


class TagResourceRequest(BaseModel):
    resourceARN: FraudDetectorArn
    tags: TagList


class TrainingDataSchema(BaseModel):
    labelSchema: Optional[LabelSchema] = None
    modelVariables: ListOfStrings


class TrainingMetrics(BaseModel):
    auc: Optional[Float] = None
    metricDataPoints: Optional[MetricDataPointsList] = None


class TrainingMetricsV2(BaseModel):
    ati: Optional[ATITrainingMetricsValue] = None
    ofi: Optional[OFITrainingMetricsValue] = None
    tfi: Optional[TFITrainingMetricsValue] = None


class UpdateDetectorVersionRequest(BaseModel):
    description: Optional[Description] = None
    detectorId: Identifier
    detectorVersionId: WholeNumberVersionString
    externalModelEndpoints: ListOfStrings
    modelVersions: Optional[ListOfModelVersions] = None
    ruleExecutionMode: Optional[RuleExecutionMode] = None
    rules: RuleList


class UpdateModelVersionRequest(BaseModel):
    externalEventsDetail: Optional[ExternalEventsDetail] = None
    ingestedEventsDetail: Optional[IngestedEventsDetail] = None
    majorVersionNumber: WholeNumberVersionString
    modelId: ModelIdentifier
    modelType: ModelTypeEnum
    tags: Optional[TagList] = None


class UpdateRuleVersionRequest(BaseModel):
    description: Optional[Description] = None
    expression: RuleExpression
    language: Language
    outcomes: NonEmptyListOfStrings
    rule: Rule
    tags: Optional[TagList] = None


class VariableImportanceMetrics(BaseModel):
    logOddsMetrics: Optional[ListOfLogOddsMetrics] = None


class EventTypeList(RootModel[List[EventType]]):
    root: List[EventType]


class AggregatedVariablesImportanceMetrics(BaseModel):
    logOddsMetrics: Optional[ListOfAggregatedLogOddsMetrics] = None


class CreateDetectorVersionRequest(BaseModel):
    description: Optional[Description] = None
    detectorId: Identifier
    externalModelEndpoints: Optional[ListOfStrings] = None
    modelVersions: Optional[ListOfModelVersions] = None
    ruleExecutionMode: Optional[RuleExecutionMode] = None
    rules: RuleList
    tags: Optional[TagList] = None


class CreateModelVersionRequest(BaseModel):
    externalEventsDetail: Optional[ExternalEventsDetail] = None
    ingestedEventsDetail: Optional[IngestedEventsDetail] = None
    modelId: ModelIdentifier
    modelType: ModelTypeEnum
    tags: Optional[TagList] = None
    trainingDataSchema: TrainingDataSchema
    trainingDataSource: TrainingDataSourceEnum


class GetDetectorVersionResult(BaseModel):
    arn: Optional[FraudDetectorArn] = None
    createdTime: Optional[Time] = None
    description: Optional[Description] = None
    detectorId: Optional[Identifier] = None
    detectorVersionId: Optional[WholeNumberVersionString] = None
    externalModelEndpoints: Optional[ListOfStrings] = None
    lastUpdatedTime: Optional[Time] = None
    modelVersions: Optional[ListOfModelVersions] = None
    ruleExecutionMode: Optional[RuleExecutionMode] = None
    rules: Optional[RuleList] = None
    status: Optional[DetectorVersionStatus] = None


class GetEventTypesResult(BaseModel):
    eventTypes: Optional[EventTypeList] = None
    nextToken: Optional[String] = None


class GetModelVersionResult(BaseModel):
    arn: Optional[FraudDetectorArn] = None
    externalEventsDetail: Optional[ExternalEventsDetail] = None
    ingestedEventsDetail: Optional[IngestedEventsDetail] = None
    modelId: Optional[ModelIdentifier] = None
    modelType: Optional[ModelTypeEnum] = None
    modelVersionNumber: Optional[FloatVersionString] = None
    status: Optional[String] = None
    trainingDataSchema: Optional[TrainingDataSchema] = None
    trainingDataSource: Optional[TrainingDataSourceEnum] = None


class ListOfModelScores(RootModel[List[ModelScores]]):
    root: List[ModelScores]


class ModelVersionEvaluation(BaseModel):
    evaluationScore: Optional[String] = None
    outputVariableName: Optional[String] = None
    predictionExplanations: Optional[PredictionExplanations] = None


class TrainingResult(BaseModel):
    dataValidationMetrics: Optional[DataValidationMetrics] = None
    trainingMetrics: Optional[TrainingMetrics] = None
    variableImportanceMetrics: Optional[VariableImportanceMetrics] = None


class TrainingResultV2(BaseModel):
    aggregatedVariablesImportanceMetrics: Optional[
        AggregatedVariablesImportanceMetrics
    ] = None
    dataValidationMetrics: Optional[DataValidationMetrics] = None
    trainingMetricsV2: Optional[TrainingMetricsV2] = None
    variableImportanceMetrics: Optional[VariableImportanceMetrics] = None


class GetEventPredictionResult(BaseModel):
    externalModelOutputs: Optional[ListOfExternalModelOutputs] = None
    modelScores: Optional[ListOfModelScores] = None
    ruleResults: Optional[ListOfRuleResults] = None


class ListOfModelVersionEvaluations(RootModel[List[ModelVersionEvaluation]]):
    root: List[ModelVersionEvaluation]


class ModelVersionDetail(BaseModel):
    arn: Optional[FraudDetectorArn] = None
    createdTime: Optional[Time] = None
    externalEventsDetail: Optional[ExternalEventsDetail] = None
    ingestedEventsDetail: Optional[IngestedEventsDetail] = None
    lastUpdatedTime: Optional[Time] = None
    modelId: Optional[ModelIdentifier] = None
    modelType: Optional[ModelTypeEnum] = None
    modelVersionNumber: Optional[FloatVersionString] = None
    status: Optional[String] = None
    trainingDataSchema: Optional[TrainingDataSchema] = None
    trainingDataSource: Optional[TrainingDataSourceEnum] = None
    trainingResult: Optional[TrainingResult] = None
    trainingResultV2: Optional[TrainingResultV2] = None


class ModelVersionDetailList(RootModel[List[ModelVersionDetail]]):
    root: List[ModelVersionDetail]


class DescribeModelVersionsResult(BaseModel):
    modelVersionDetails: Optional[ModelVersionDetailList] = None
    nextToken: Optional[String] = None


class EvaluatedModelVersion(BaseModel):
    evaluations: Optional[ListOfModelVersionEvaluations] = None
    modelId: Optional[String] = None
    modelType: Optional[String] = None
    modelVersion: Optional[String] = None


class ListOfEvaluatedModelVersions(RootModel[List[EvaluatedModelVersion]]):
    root: List[EvaluatedModelVersion]


class GetEventPredictionMetadataResult(BaseModel):
    detectorId: Optional[Identifier] = None
    detectorVersionId: Optional[WholeNumberVersionString] = None
    detectorVersionStatus: Optional[String] = None
    entityId: Optional[String] = None
    entityType: Optional[String] = None
    evaluatedExternalModels: Optional[ListOfEvaluatedExternalModels] = None
    evaluatedModelVersions: Optional[ListOfEvaluatedModelVersions] = None
    eventId: Optional[Identifier] = None
    eventTimestamp: Optional[Time] = None
    eventTypeName: Optional[Identifier] = None
    eventVariables: Optional[ListOfEventVariableSummaries] = None
    outcomes: Optional[ListOfStrings] = None
    predictionTimestamp: Optional[Time] = None
    ruleExecutionMode: Optional[RuleExecutionMode] = None
    rules: Optional[EvaluatedRuleList] = None
